package Vistas;

import Conexion.Conexionmysql;
import static Vistas.ModuloFacturacion.jDesktopPane_menu;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Dimension;
import java.awt.Font;
import java.beans.PropertyVetoException;
import java.io.FileOutputStream;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import javax.swing.JOptionPane;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import org.jfree.data.general.DefaultPieDataset;

public class InterHistorialVentas extends javax.swing.JInternalFrame {

    private static String Fecha_Inicio = "", Fecha_Fin = "";
    private Map<String, Double> ventasPorFecha = new HashMap<>();
    private double totalVentasReporte = 0.0;

    public InterHistorialVentas() {
        initComponents();
        this.setSize(new Dimension(500, 400));
        this.setTitle("Historial Ventas");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser_fechaInicio = new com.toedter.calendar.JDateChooser();
        jDateChooser_fechaFin = new com.toedter.calendar.JDateChooser();
        jButton_GraficarVenta = new javax.swing.JButton();
        jButton_ExportaPdf = new javax.swing.JButton();
        jLabel_wall_paper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Seleccione Fecha Para El Historial");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 280, 30));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Fecha Inicio:");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 150, 30));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Fecha Fin:");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 150, 30));

        jDateChooser_fechaInicio.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser_fechaInicio.setForeground(new java.awt.Color(0, 0, 0));
        jDateChooser_fechaInicio.setDateFormatString("yyyy-MM-dd");
        jDateChooser_fechaInicio.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        getContentPane().add(jDateChooser_fechaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 85, 190, 30));

        jDateChooser_fechaFin.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser_fechaFin.setForeground(new java.awt.Color(0, 0, 0));
        jDateChooser_fechaFin.setDateFormatString("yyyy-MM-dd");
        jDateChooser_fechaFin.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        getContentPane().add(jDateChooser_fechaFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 190, 30));

        jButton_GraficarVenta.setBackground(new java.awt.Color(0, 255, 255));
        jButton_GraficarVenta.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton_GraficarVenta.setForeground(new java.awt.Color(0, 0, 0));
        jButton_GraficarVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/historial1.png"))); // NOI18N
        jButton_GraficarVenta.setText("Graficar");
        jButton_GraficarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GraficarVentaActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_GraficarVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 180, 40));

        jButton_ExportaPdf.setBackground(new java.awt.Color(0, 255, 255));
        jButton_ExportaPdf.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton_ExportaPdf.setForeground(new java.awt.Color(0, 0, 0));
        jButton_ExportaPdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/historial1.png"))); // NOI18N
        jButton_ExportaPdf.setText("Exportar Pdf");
        jButton_ExportaPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ExportaPdfActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_ExportaPdf, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 180, 40));

        jLabel_wall_paper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo3.jpg"))); // NOI18N
        getContentPane().add(jLabel_wall_paper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_GraficarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GraficarVentaActionPerformed
        // Limpiar los datos anteriores para evitar problemas con datos viejos
        ventasPorFecha.clear();
        totalVentasReporte = 0.0;

        // Obtener las fechas seleccionadas de los JDateChooser
        Date fechaInicio = jDateChooser_fechaInicio.getDate();
        Date fechaFin = jDateChooser_fechaFin.getDate();

        // Validar que las fechas no estén vacías
        if (fechaInicio == null || fechaFin == null) {
            JOptionPane.showMessageDialog(null, "Por favor selecciona ambas fechas.");
            return;
        }

        // Formatear las fechas a un formato adecuado para consultas SQL
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String fechaInicioStr = sdf.format(fechaInicio);
        String fechaFinStr = sdf.format(fechaFin);

        // Crear el dataset para la gráfica tipo pastel
        DefaultPieDataset dataset = new DefaultPieDataset();

        try {
            // Conectar a la base de datos
            Conexionmysql conexion = new Conexionmysql();
            Connection cn = conexion.getConnection();

            // Consulta para obtener las ventas dentro del rango de fechas
            String sql = "SELECT fecha_venta, SUM(valor_pagar) as total_ventas "
                    + "FROM cabecera_venta "
                    + "WHERE fecha_venta BETWEEN ? AND ? "
                    + "GROUP BY fecha_venta";
            PreparedStatement pst = cn.prepareStatement(sql);
            pst.setString(1, fechaInicioStr);
            pst.setString(2, fechaFinStr);

            ResultSet rs = pst.executeQuery();

            // Verificar si hay resultados
            if (!rs.next()) {
                JOptionPane.showMessageDialog(null, "No se encontraron ventas en el rango de fechas.");
                return;
            }
            // Insertar los datos en la tabla reporte_ventas
            String insertSql = "INSERT INTO reporte_ventas (fecha_generacion, fecha_inicio, fecha_fin, tipo_grafico, total_ventas, usuario, observaciones) "
                    + "VALUES (?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement insertPst = cn.prepareStatement(insertSql);

            // Agregar los datos al dataset tipo pastel
            do {
                String fechaVenta = rs.getString("fecha_venta");
                double totalVentas = rs.getDouble("total_ventas");
                totalVentasReporte += totalVentas;  // Sumar para el total del reporte
                ventasPorFecha.put(fechaVenta, totalVentas);  // Guardar ventas por fecha para cálculos de porcentaje
            } while (rs.next());

            // Agregar los porcentajes de ventas al dataset
            for (Map.Entry<String, Double> entry : ventasPorFecha.entrySet()) {
                String fecha = entry.getKey();
                double ventas = entry.getValue();
                double porcentaje = (ventas / totalVentasReporte) * 100;
                dataset.setValue(fecha + " (" + String.format("%.2f", porcentaje) + "%)", ventas);
            }

        } catch (SQLException e) {
            System.out.println("Error al obtener los datos: " + e.getMessage());
            return;
        }

        // Crear la gráfica tipo pastel
        JFreeChart chart = ChartFactory.createPieChart(
                "Historial de Ventas", // Título de la gráfica
                dataset, // Datos para la gráfica
                true, // Mostrar leyenda
                true, // Mostrar tooltips
                false // No usar URLs
        );

        // Crear el ChartPanel y añadir la gráfica
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new java.awt.Dimension(1200, 600));

        // Crear un JInternalFrame para contener la gráfica
        JInternalFrame internalFrame = new JInternalFrame("Gráfica de Ventas", true, true, true, true);
        internalFrame.setSize(1200, 600);
        internalFrame.add(chartPanel);
        internalFrame.setVisible(true);

        // Añadir el JInternalFrame al desktopPane_menu
        jDesktopPane_menu.add(internalFrame);
        try {
            internalFrame.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(InterHistorialVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        // Limpiar los campos de fecha después de generar la gráfica
        jDateChooser_fechaInicio.setDate(null);
        jDateChooser_fechaFin.setDate(null);
    }//GEN-LAST:event_jButton_GraficarVentaActionPerformed

    private void jButton_ExportaPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ExportaPdfActionPerformed
        // Verificar que el mapa no esté vacío
        if (ventasPorFecha == null || ventasPorFecha.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No hay datos para exportar. Genera el reporte primero.");
            return;
        }

        // Crear un formato de fecha adecuado para nombres de archivos
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String fechaInicioStr = dateFormat.format(jDateChooser_fechaInicio.getDate());
        String fechaFinStr = dateFormat.format(jDateChooser_fechaFin.getDate());

        // Ruta donde se guardará el archivo PDF con formato de fecha válido
        String ruta = "reporte_ventas_" + fechaInicioStr + "_a_" + fechaFinStr + ".pdf";

        // Generar el PDF usando la biblioteca iText
        Document documento = new Document();
        try {
            PdfWriter.getInstance(documento, new FileOutputStream(ruta));
            documento.open();

            // Título del reporte
            Paragraph titulo = new Paragraph("Reporte de Ventas", FontFactory.getFont(FontFactory.HELVETICA_BOLD, 20, Font.BOLD, BaseColor.BLACK));
            titulo.setAlignment(Element.ALIGN_CENTER);
            documento.add(titulo);
            documento.add(new Paragraph("Fecha de Inicio: " + fechaInicioStr));
            documento.add(new Paragraph("Fecha de Fin: " + fechaFinStr));
            documento.add(new Paragraph("Total Ventas: $" + totalVentasReporte));
            documento.add(new Paragraph(" "));  // Espacio en blanco

            // Crear tabla con 3 columnas
            PdfPTable table = new PdfPTable(3);
            table.setWidthPercentage(100); // Ancho de la tabla al 100% de la página
            table.setSpacingBefore(10f); // Espacio antes de la tabla
            table.setSpacingAfter(10f);  // Espacio después de la tabla

            // Configurar los anchos de las columnas
            float[] columnWidths = {2f, 2f, 2f};
            table.setWidths(columnWidths);

            // Agregar encabezados a la tabla
            PdfPCell cell;

            cell = new PdfPCell(new Phrase("Fecha de Venta", FontFactory.getFont(FontFactory.HELVETICA_BOLD, 12, BaseColor.WHITE)));
            cell.setBackgroundColor(BaseColor.DARK_GRAY);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setPadding(10f);
            table.addCell(cell);

            cell = new PdfPCell(new Phrase("Total Ventas ($)", FontFactory.getFont(FontFactory.HELVETICA_BOLD, 12, BaseColor.WHITE)));
            cell.setBackgroundColor(BaseColor.DARK_GRAY);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setPadding(10f);
            table.addCell(cell);

            cell = new PdfPCell(new Phrase("Porcentaje (%)", FontFactory.getFont(FontFactory.HELVETICA_BOLD, 12, BaseColor.WHITE)));
            cell.setBackgroundColor(BaseColor.DARK_GRAY);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setPadding(10f);
            table.addCell(cell);

            // Agregar los datos de ventas
            for (Map.Entry<String, Double> entry : ventasPorFecha.entrySet()) {
                String fecha = entry.getKey();
                double ventas = entry.getValue();
                double porcentaje = (ventas / totalVentasReporte) * 100;

                // Celda de la fecha
                cell = new PdfPCell(new Phrase(fecha, FontFactory.getFont(FontFactory.HELVETICA, 12, BaseColor.BLACK)));
                cell.setPadding(8f);
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                // Celda del total de ventas
                cell = new PdfPCell(new Phrase("$" + String.format("%.2f", ventas), FontFactory.getFont(FontFactory.HELVETICA, 12, BaseColor.BLACK)));
                cell.setPadding(8f);
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                // Celda del porcentaje
                cell = new PdfPCell(new Phrase(String.format("%.2f", porcentaje) + "%", FontFactory.getFont(FontFactory.HELVETICA, 12, BaseColor.BLACK)));
                cell.setPadding(8f);
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);
            }

            // Agregar la tabla al documento
            documento.add(table);

            // Cerrar el documento
            documento.close();
            JOptionPane.showMessageDialog(null, "Reporte guardado en: " + ruta);

        } catch (Exception e) {
            System.out.println("Error al generar el PDF: " + e.getMessage());
        }
        // Limpiar los campos de fecha después de generar el pdf
        jDateChooser_fechaInicio.setDate(null);
        jDateChooser_fechaFin.setDate(null);
    }//GEN-LAST:event_jButton_ExportaPdfActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_ExportaPdf;
    private javax.swing.JButton jButton_GraficarVenta;
    private com.toedter.calendar.JDateChooser jDateChooser_fechaFin;
    private com.toedter.calendar.JDateChooser jDateChooser_fechaInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel_wall_paper;
    // End of variables declaration//GEN-END:variables

}
