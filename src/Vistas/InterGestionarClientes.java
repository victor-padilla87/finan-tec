package Vistas;

import Conexion.Conexionmysql;
import controlador.Ctr_Cliente;
import java.awt.Dimension;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import static java.awt.image.ImageObserver.WIDTH;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;

public class InterGestionarClientes extends javax.swing.JInternalFrame {

    private int idCliente;

    private int idProveedor;

    public InterGestionarClientes() {
        initComponents();
        this.setSize(new Dimension(1200, 500));
        this.setTitle("Gestionar Clientes");

        this.CargarTablaClientes();

        // metodo para insertar imagen por medio de codigo
        ImageIcon wallpaper = new ImageIcon("src/imagenes/fondo3.jpg");
        Icon Icono = new ImageIcon(wallpaper.getImage().getScaledInstance(1200, 500, WIDTH));
        jLabel_wallpaper.setIcon(Icono);
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_GestionClientes = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_cedula = new javax.swing.JTextField();
        txt_telefono = new javax.swing.JTextField();
        txt_direccion = new javax.swing.JTextField();
        txt_apellido = new javax.swing.JTextField();
        txt_correo = new javax.swing.JTextField();
        txt_nombre = new javax.swing.JTextField();
        jButton_Actualizar = new javax.swing.JButton();
        jButton_Eliminar = new javax.swing.JButton();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Gestionar Clientes");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 10, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        jTable_GestionClientes.setBackground(new java.awt.Color(255, 255, 255));
        jTable_GestionClientes.setForeground(new java.awt.Color(0, 0, 0));
        jTable_GestionClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_GestionClientes);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1150, 230));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 1170, 250));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Cedula:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 70, -1));

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Nombre:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 110, -1));

        jLabel4.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Telefono:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 150, -1));

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Direccion:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 150, -1));

        jLabel6.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Apellido:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 90, -1));

        jLabel8.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Correo:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 150, -1));

        txt_cedula.setBackground(new java.awt.Color(255, 255, 255));
        txt_cedula.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.add(txt_cedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 190, 25));

        txt_telefono.setBackground(new java.awt.Color(255, 255, 255));
        txt_telefono.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.add(txt_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 60, 190, 25));

        txt_direccion.setBackground(new java.awt.Color(255, 255, 255));
        txt_direccion.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.add(txt_direccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 20, 190, 25));

        txt_apellido.setBackground(new java.awt.Color(255, 255, 255));
        txt_apellido.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.add(txt_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 190, 25));

        txt_correo.setBackground(new java.awt.Color(255, 255, 255));
        txt_correo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.add(txt_correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 100, 190, 25));

        txt_nombre.setBackground(new java.awt.Color(255, 255, 255));
        txt_nombre.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 190, 25));

        jButton_Actualizar.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        jButton_Actualizar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton_Actualizar.setForeground(new java.awt.Color(34, 210, 62));
        jButton_Actualizar.setText("Actualizar");
        jButton_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ActualizarActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_Actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 20, 110, 40));

        jButton_Eliminar.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        jButton_Eliminar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton_Eliminar.setForeground(new java.awt.Color(221, 11, 10));
        jButton_Eliminar.setText("Elimanar");
        jButton_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EliminarActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 80, 110, 40));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 1170, 160));
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ActualizarActionPerformed
        if (txt_cedula.getText().isEmpty() || txt_nombre.getText().isEmpty() || txt_apellido.getText().isEmpty() || txt_direccion.getText().isEmpty() || txt_telefono.getText().isEmpty() || txt_correo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Complete todo los caompos");
        } else {
            Cliente cliente = new Cliente();
            Ctr_Cliente controlCliente = new Ctr_Cliente();

            cliente.setCedula(txt_cedula.getText().trim());
            cliente.setNombre(txt_nombre.getText().trim());
            cliente.setApellido(txt_apellido.getText().trim());
            cliente.setDireccion(txt_direccion.getText().trim());
            cliente.setTelefono(txt_telefono.getText().trim());
            cliente.setCorreo(txt_correo.getText().trim());
            cliente.setIdCliente(idCliente);

            if (controlCliente.Actualizar(cliente, idCliente)) {
                JOptionPane.showMessageDialog(null, "Cliente Actualizado");
                this.CargarTablaClientes();
                this.Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al Actualizar el Cliente");
                this.Limpiar();
            }
        }

    }//GEN-LAST:event_jButton_ActualizarActionPerformed

    private void jButton_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EliminarActionPerformed

        Ctr_Cliente controlCliente = new Ctr_Cliente();

        if (idCliente == 0) {
            JOptionPane.showMessageDialog(null, "Se debe seleccionar un cliente");
        } else {
            // Cambiamos la lógica para que el mensaje de éxito aparezca cuando controlCliente.Eliminar(idCliente) devuelva true
            if (controlCliente.Eliminar(idCliente)) {
                JOptionPane.showMessageDialog(null, "Cliente Eliminado");
                this.CargarTablaClientes();
                this.Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al Eliminar el cliente");
                this.Limpiar();
            }
        }
    }//GEN-LAST:event_jButton_EliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Actualizar;
    private javax.swing.JButton jButton_Eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_GestionClientes;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JTextField txt_cedula;
    private javax.swing.JTextField txt_correo;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_telefono;
    // End of variables declaration//GEN-END:variables

    // Limpiar los campos del formulario
    private void Limpiar() {
        txt_cedula.setText("");
        txt_nombre.setText("");
        txt_direccion.setText("");
        txt_telefono.setText("");
        txt_apellido.setText("");
        txt_correo.setText("");
    }

// metodo para cargar la tabla clientes
    private void CargarTablaClientes() {
        Conexionmysql conexion = new Conexionmysql();
        Connection cn = conexion.getConnection();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "SELECT * FROM clientes";
        Statement st = null;
        ResultSet rs = null;

        try {
            st = cn.createStatement();
            rs = st.executeQuery(sql);

            // Obtener referencia a la tabla existente
            InterGestionarClientes.jTable_GestionClientes.setModel(model);
            InterGestionarClientes.jScrollPane1.setViewportView(InterGestionarClientes.jTable_GestionClientes);

            // Añadir columnas al modelo
            model.addColumn("N");
            model.addColumn("Cedula");
            model.addColumn("Nombre");
            model.addColumn("Apellido");
            model.addColumn("Direccion");
            model.addColumn("Telefono");
            model.addColumn("Correo");

            // Cargar los datos en el modelo
            while (rs.next()) {
                Object fila[] = new Object[7];
                fila[0] = rs.getInt("idCliente");
                fila[1] = rs.getString("cedula");
                fila[2] = rs.getString("nombre");
                fila[3] = rs.getString("apellido");
                fila[4] = rs.getString("direccion");
                fila[5] = rs.getString("telefono");
                fila[6] = rs.getString("email");
                model.addRow(fila);
            }
        } catch (SQLException e) {
            System.out.println("Error al cargar los datos: " + e.getMessage());
        } finally {
            // Cerrar recursos
            try {
                if (rs != null) {
                    rs.close();
                }
                if (st != null) {
                    st.close();
                }
                if (cn != null) {
                    cn.close();
                }
            } catch (SQLException e) {
                System.out.println("Error al cerrar la conexión: " + e.getMessage());
            }
        }
        jTable_GestionClientes.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_GestionClientes.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    idCliente = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosClienteSeleccionado(idCliente);
                }
            }
        });
    }

    private void EnviarDatosClienteSeleccionado(int idCliente) {

        try {
            // Crear la conexión
            Conexionmysql conexion = new Conexionmysql();
            Connection cn = conexion.getConnection();

            // Preparar la consulta con el parámetro idCategoria
            PreparedStatement pst = cn.prepareStatement("SELECT * FROM clientes WHERE idCliente = ?");

            // Asignar el valor del parámetro
            pst.setInt(1, idCliente);

            // Ejecutar la consulta
            ResultSet rs = pst.executeQuery();

            // Si se encuentra el producto, cargar la descripción en el campo de texto
            if (rs.next()) {
                txt_cedula.setText(rs.getString("cedula"));
                txt_nombre.setText(rs.getString("nombre"));
                txt_apellido.setText(rs.getString("apellido"));
                txt_direccion.setText(rs.getString("direccion"));
                txt_telefono.setText(rs.getString("telefono"));
                txt_correo.setText(rs.getString("email"));

            }

            // Cerrar la conexión
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al seleccionar el cliente: " + e.getMessage());
        }
    }
    
    public void addClientSelectionListener(ActionListener listener) {
    // Aquí suponemos que tienes un JComboBox llamado jComboBox_Clientes
    jComboBox_Clientes.addActionListener(listener);
}

    private static class jComboBox_Clientes {

        private static void addActionListener(ActionListener listener) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        public jComboBox_Clientes() {
        }
    }

}
