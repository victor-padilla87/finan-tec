package Vistas;

import Conexion.Conexionmysql;
import static Vistas.ModuloFacturacion.jDesktopPane_menu;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.io.FileOutputStream;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import javax.swing.JOptionPane;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import java.sql.SQLException;
import javax.swing.JButton;
import org.jfree.data.general.DefaultPieDataset;

public class InterHistorialReportes extends javax.swing.JInternalFrame {

    public static String Fecha_Inicio = "", Fecha_Fin = "";
    private Object dataset;
    private String fechaInicioStr;
    private String fechaFinStr;

    public InterHistorialReportes() {
        initComponents();
        this.setSize(new Dimension(500, 400));
        this.setTitle("Historial Reportes");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser_fechaInicio = new com.toedter.calendar.JDateChooser();
        jDateChooser_fechaFin = new com.toedter.calendar.JDateChooser();
        jButton_GraficarReportes = new javax.swing.JButton();
        jButton_ExportarPdf = new javax.swing.JButton();
        jLabel_wall_paper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Seleccione Fecha Para El Historial");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 280, 30));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Fecha Inicio:");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 150, 30));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Fecha Fin:");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 150, 30));

        jDateChooser_fechaInicio.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser_fechaInicio.setForeground(new java.awt.Color(0, 0, 0));
        jDateChooser_fechaInicio.setDateFormatString("yyyy-MM-dd");
        jDateChooser_fechaInicio.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        getContentPane().add(jDateChooser_fechaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 85, 190, 30));

        jDateChooser_fechaFin.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser_fechaFin.setForeground(new java.awt.Color(0, 0, 0));
        jDateChooser_fechaFin.setDateFormatString("yyyy-MM-dd");
        jDateChooser_fechaFin.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        getContentPane().add(jDateChooser_fechaFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 190, 30));

        jButton_GraficarReportes.setBackground(new java.awt.Color(0, 255, 255));
        jButton_GraficarReportes.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton_GraficarReportes.setForeground(new java.awt.Color(0, 0, 0));
        jButton_GraficarReportes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/historial1.png"))); // NOI18N
        jButton_GraficarReportes.setText("Graficar ");
        jButton_GraficarReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GraficarReportesActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_GraficarReportes, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 180, 40));

        jButton_ExportarPdf.setBackground(new java.awt.Color(0, 255, 255));
        jButton_ExportarPdf.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton_ExportarPdf.setForeground(new java.awt.Color(0, 0, 0));
        jButton_ExportarPdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/historial1.png"))); // NOI18N
        jButton_ExportarPdf.setText("Exportar Pdf");
        jButton_ExportarPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ExportarPdfActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_ExportarPdf, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 180, 40));

        jLabel_wall_paper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo3.jpg"))); // NOI18N
        getContentPane().add(jLabel_wall_paper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_GraficarReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GraficarReportesActionPerformed
        // Obtener las fechas seleccionadas de los JDateChooser
        Date fechaInicio = jDateChooser_fechaInicio.getDate();
        Date fechaFin = jDateChooser_fechaFin.getDate();

        // Validar que las fechas no estén vacías
        if (fechaInicio == null || fechaFin == null) {
            JOptionPane.showMessageDialog(null, "Por favor selecciona ambas fechas.");
            return;
        }

        // Formatear las fechas a un formato adecuado para consultas SQL
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String fechaInicioStr = sdf.format(fechaInicio);
        String fechaFinStr = sdf.format(fechaFin);

        // Crear el dataset para la gráfica de pastel
        DefaultPieDataset dataset = new DefaultPieDataset();

        try {
            // Conectar a la base de datos
            Conexionmysql conexion = new Conexionmysql();
            Connection cn = conexion.getConnection();

            // Consulta para obtener los reportes dentro del rango de fechas
            String sql = "SELECT fecha_generacion, COUNT(*) as total_reportes "
                    + "FROM reporte_ventas "
                    + "WHERE fecha_generacion BETWEEN ? AND ? "
                    + "GROUP BY fecha_generacion";
            PreparedStatement pst = cn.prepareStatement(sql);
            pst.setString(1, fechaInicioStr);
            pst.setString(2, fechaFinStr);

            ResultSet rs = pst.executeQuery();

            // Verificar si hay resultados
            if (!rs.next()) {
                JOptionPane.showMessageDialog(null, "No se encontraron reportes en el rango de fechas.");
                return;
            }

            // Agregar los datos al dataset
            do {
                String fechaReporte = rs.getString("fecha_generacion");
                int totalReportes = rs.getInt("total_reportes");
                dataset.setValue(fechaReporte, totalReportes);
            } while (rs.next());

        } catch (SQLException e) {
            System.out.println("Error al obtener los datos: " + e.getMessage());
            return;
        }

        // Crear la gráfica de pastel
        JFreeChart chart = ChartFactory.createPieChart(
                "Historial de Reportes", // Título de la gráfica
                dataset, // Datos para la gráfica
                true, // Mostrar leyenda
                true, // Mostrar tooltips
                false // No usar URLs
        );

        // Crear el ChartPanel y añadir la gráfica
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new java.awt.Dimension(1200, 600));

        // Crear un JInternalFrame para contener la gráfica
        JInternalFrame internalFrame = new JInternalFrame("Gráfica de Reportes", true, true, true, true);
        internalFrame.setSize(1200, 600);
        internalFrame.add(chartPanel);
        internalFrame.setVisible(true);

        // Añadir el JInternalFrame al desktopPane_menu
        jDesktopPane_menu.add(internalFrame);
        try {
            internalFrame.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(InterHistorialReportes.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Botón para exportar a PDF
        JButton exportButton = new JButton("Exportar a PDF");
        exportButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                exportarPDF(fechaInicioStr, fechaFinStr, dataset);
            }

            private void exportarPDF(String fechaInicioStr, String fechaFinStr, DefaultPieDataset dataset) {
                throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            }
        });

        // Añadir el botón de exportación al JInternalFrame
        internalFrame.getContentPane().add(exportButton, BorderLayout.SOUTH);

        // Limpiar los campos de las fechas después de generar el reporte
        jDateChooser_fechaInicio.setDate(null);
        jDateChooser_fechaFin.setDate(null);


    }//GEN-LAST:event_jButton_GraficarReportesActionPerformed

    private void jButton_ExportarPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ExportarPdfActionPerformed
        Document documento = new Document();
        try {
            String ruta = "reporte_historial_" + fechaInicioStr + "_a_" + fechaFinStr + ".pdf";
            PdfWriter.getInstance(documento, new FileOutputStream(ruta));
            documento.open();

            // Título del reporte
            Paragraph titulo = new Paragraph("Reporte de Historial de Reportes",
                    FontFactory.getFont(FontFactory.HELVETICA_BOLD, 20, Font.BOLD, BaseColor.BLACK));
            titulo.setAlignment(Element.ALIGN_CENTER);
            documento.add(titulo);
            documento.add(new Paragraph("Fecha de Inicio: " + fechaInicioStr));
            documento.add(new Paragraph("Fecha de Fin: " + fechaFinStr));
            documento.add(new Paragraph(" "));  // Espacio en blanco

            // Crear tabla estilizada con 2 columnas (fecha y total de reportes)
            PdfPTable table = new PdfPTable(2);
            table.setWidthPercentage(100);
            table.setSpacingBefore(10f);
            table.setSpacingAfter(10f);

            float[] columnWidths = {3f, 2f};
            table.setWidths(columnWidths);

            // Encabezados
            PdfPCell cell = new PdfPCell(new Phrase("Fecha de Reporte",
                    FontFactory.getFont(FontFactory.HELVETICA_BOLD, 12, BaseColor.WHITE)));
            cell.setBackgroundColor(BaseColor.DARK_GRAY);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setPadding(10f);
            table.addCell(cell);

            cell = new PdfPCell(new Phrase("Total de Reportes",
                    FontFactory.getFont(FontFactory.HELVETICA_BOLD, 12, BaseColor.WHITE)));
            cell.setBackgroundColor(BaseColor.DARK_GRAY);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setPadding(10f);
            table.addCell(cell);

            DefaultPieDataset dataset = new DefaultPieDataset();

            // Agregar los datos de reportes al PDF
            for (Object key : dataset.getKeys()) {
                String fechaReporte = key.toString(); // Convertir la clave (fecha) a String
                Number totalReportes = dataset(key); // Obtener el valor correspondiente a la clave

                // Añadir la fecha y el total de reportes a la tabla
                cell = new PdfPCell(new Phrase(fechaReporte,
                        FontFactory.getFont(FontFactory.HELVETICA, 12, BaseColor.BLACK)));
                cell.setPadding(8f);
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Phrase(totalReportes.toString(),
                        FontFactory.getFont(FontFactory.HELVETICA, 12, BaseColor.BLACK)));
                cell.setPadding(8f);
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);
            }

            // Añadir la tabla al documento
            documento.add(table);
            documento.close();
            JOptionPane.showMessageDialog(null, "Reporte guardado en: " + ruta);

            // Limpiar los campos de las fechas después de generar el reporte
            jDateChooser_fechaInicio.setDate(null);
            jDateChooser_fechaFin.setDate(null);

        } catch (Exception e) {
            System.out.println("Error al generar el PDF: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton_ExportarPdfActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_ExportarPdf;
    private javax.swing.JButton jButton_GraficarReportes;
    private com.toedter.calendar.JDateChooser jDateChooser_fechaFin;
    private com.toedter.calendar.JDateChooser jDateChooser_fechaInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel_wall_paper;
    // End of variables declaration//GEN-END:variables

    private Number dataset(Object key) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

}
